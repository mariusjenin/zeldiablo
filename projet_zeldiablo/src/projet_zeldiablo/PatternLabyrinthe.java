package projet_zeldiablo;

public class PatternLabyrinthe {
	/**
	 * Tableau des differents Pattern (taille des labyrinthe >5)
	 */
	private final static int[][][] Lab = { { { 1, 1, 1 }, { 1, 3, 1 }, { 0, 0, 0 }, },
			{ { 3, 1, 10, 1 }, { 0, 0, 0, 0 }, { 10, 1, 1, 0 }, { 1, 0, 0, 0 },

			}, { { 0, 1, 3, 1, 0 }, { 1, 0, 0, 0, 1 }, { 0, 0, 12, 0, 0 }, { 1, 0, 0, 0, 1 }, { 0, 1, 0, 1, 0 },

			}, { { 10, 0, 0, 0, 0, 12 }, { 0, 1, 0, 1, 0, 1 }, { 0, 1, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0 },
				{ 0, 0, 1, 0, 1, 0 }, { 1, 3, 1, 0, 1, 3 },
			},

			{ { 1, 1, 0, 3, 0, 1, 1 }, { 11, 0, 0, 1, 0, 0, 11 }, { 0, 1, 0, 12, 0, 1, 0 }, { 0, 1, 10, 0, 10, 1, 0 },
				{ 0, 0, 1, 0, 1, 0, 0 }, { 1, 0, 1, 0, 1, 0, 1 }, { 1, 0, 0, 0, 0, 0, 1 },

			},
			{ { 1, 1, 1, 10, 0, 1, 1, 12 }, { 1, 1, 0, 0, 0, 0, 0, 1 }, { 1, 0, 0, 1, 1, 1, 0, 0 },
				{ 0, 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 10, 1, 0, 1, 10 }, { 0, 1, 0, 1, 0, 10, 1, 0 },
				{ 0, 1, 0, 1, 0, 1, 0, 0 }, { 10, 0, 0, 1, 0, 1, 3, 1 },

			},
			{ { 0, 0, 0, 1, 0, 1, 10, 1, 1 }, { 0, 1, 0, 1, 0, 10, 0, 1, 3 }, { 11, 1, 0, 12, 0, 1, 10, 0, 0 },
				{ 1, 0, 0, 0, 0, 0, 1, 1, 0 }, { 0, 0, 1, 1, 1, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0, 1, 0 },
				{ 0, 1, 0, 1, 13, 0, 0, 1, 0 }, { 0, 1, 0, 1, 1, 1, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0 },

			},
			{ { 1, 1, 0, 0, 10, 3, 1, 3, 10, 1 }, { 12, 10, 1, 0, 0, 1, 10, 1, 10, 10 },
				{ 10, 10, 3, 1, 0, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 13, 1, 1, 0, 1, 0 },
				{ 0, 0, 0, 1, 1, 1, 0, 0, 1, 0 }, { 0, 12, 0, 0, 1, 1, 0, 12, 10, 0 },
				{ 0, 0, 12, 0, 0, 1, 0, 1, 1, 0 }, { 0, 1, 10, 1, 0, 0, 0, 1, 0, 0 },
				{ 0, 1, 10, 3, 1, 0, 1, 1, 0, 0 }, { 0, 0, 10, 1, 0, 0, 0, 0, 0, 11 } },
			{ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 12, 1, 1, 1, 1, 1, 1, 1, 12, 0 },
					{ 0, 1, 0, 0, 0, 0, 0, 0, 10, 1, 0 }, { 0, 0, 0, 1, 1, 1, 1, 10, 10, 1, 0 },
					{ 1, 1, 1, 0, 0, 0, 0, 1, 3, 1, 0 }, { 10, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0 },
					{ 0, 0, 1, 1, 10, 13, 1, 0, 0, 0, 0 }, { 1, 0, 10, 1, 0, 1, 0, 1, 1, 1, 10 },
					{ 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1 }, { 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1 },
					{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 },

			},
			{ { 3, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 12, }, { 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, },
				{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 12, }, { 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, },
				{ 12, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }, { 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, },
				{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 12, }, { 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, },
				{ 12, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }, { 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, },
				{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 12, }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },

			},
			{ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, }, { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 12, 0, },
				{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 10, 1, 0, }, { 0, 1, 0, 1, 1, 1, 1, 1, 1, 12, 0, 1, 0, },
				{ 0, 1, 0, 1, 0, 0, 0, 0, 10, 1, 0, 1, 0, }, { 0, 1, 0, 1, 0, 1, 1, 12, 0, 1, 0, 1, 0, },
				{ 0, 1, 0, 1, 0, 1, 3, 0, 0, 1, 0, 1, 0, }, { 0, 1, 0, 1, 0, 12, 1, 1, 1, 1, 0, 1, 0, },
				{ 0, 1, 0, 1, 10, 0, 0, 0, 0, 0, 0, 1, 0, }, { 0, 1, 0, 12, 1, 1, 1, 1, 1, 1, 1, 1, 0, },
				{ 0, 1, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, { 0, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
				{ 10, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, },

			},
			{ { 14, 13, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, }, { 1, 0, 0, 3, 1, 0, 0, 0, 0, 1, 3, 0, 0, 1, },
				{ 1, 1, 3, 1, 1, 0, 0, 0, 0, 1, 1, 3, 1, 1, }, { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, },
				{ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, }, { 0, 0, 1, 0, 13, 1, 0, 0, 1, 13, 0, 1, 0, 0, },
				{ 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, }, { 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, },
				{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, }, { 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, },
				{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, }, { 0, 0, 0, 1, 1, 10, 10, 10, 10, 1, 1, 0, 0, 0, },
				{ 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, }, { 12, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 12, },

			},
			{ { 1, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 3, 1, }, { 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, },
				{ 12, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 12, },
				{ 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, },
				{ 12, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 12, },
				{ 13, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 13, },
				{ 12, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 12, },
				{ 13, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 13, },
				{ 12, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 12, },
				{ 13, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, },
				{ 12, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 12, },
				{ 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 13, },
				{ 12, 0, 1, 14, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 12, },
				{ 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 13, },
				{ 12, 13, 1, 13, 1, 14, 1, 0, 1, 0, 1, 13, 1, 13, 12, },

			},
			{ { 14, 14, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 14, 14, },
				{ 14, 14, 14, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 14, 14, 14, },
				{ 14, 14, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 14, 14, },
				{ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
				{ 1, 1, 0, 0, 0, 0, 0, 13, 13, 0, 0, 0, 0, 0, 1, 1, },
				{ 1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 13, 0, 0, 0, 0, 1, },
				{ 1, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 1, },
				{ 1, 0, 0, 0, 13, 0, 0, 8, 8, 0, 0, 13, 0, 0, 0, 1, },
				{ 1, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 1, },
				{ 1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 13, 0, 0, 0, 0, 1, },
				{ 1, 0, 0, 0, 0, 0, 0, 13, 13, 0, 0, 0, 0, 0, 0, 1, },
				{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
				{ 14, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 14, },
				{ 14, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 14, },
				{ 14, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 14, },
				{ 14, 14, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 14, 14, },

			}, };

	/**
	 * Renvoie la grille correspondant a la taille voulue
	 * 
	 * @param n taille de la grille
	 * @return ctab Ensemble des cases de la grille voulue
	 */
	public Case[][] getLab(int n) {
		Case[][] ctab = new Case[n][n];
		int[][] patt = Lab[n - 3];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				ctab[j][i] = new Case(j, i, patt[i][j]);
			}
		}
		return ctab;
	}
}
